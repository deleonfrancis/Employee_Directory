{"version":3,"sources":["components/Filter.js","components/Jumboton.js","components/Employee.js","components/SortButton.js","components/TableHeader.js","components/Table.js","components/CardEmployee.js","components/MobileCards.js","components/Dashboard.js","util/util.js","App.js","api.js","index.js"],"names":["Filter","onClearClick","onFilterClick","useState","searchValue","setSearchValue","className","onChange","event","target","value","type","placeholder","ariaLabel","onClick","Jumboton","Employee","employee","data-toggle","data-target","src","picture","alt","firstName","lastName","email","phone","SortButton","text","sortField","TableHeader","class","Table","sortEmployeesClick","employeeList","map","guid","CardEmployee","console","log","style","width","lgPicture","MobileCards","Dashboard","employees","isDesktopOrLaptop","useMediaQuery","query","isTabletOrMobile","setEmployeeList","sortBy","sortedList","sort","a","b","propertyA","propertyB","phoneNumberOne","phoneNumberTwo","isNaN","slice","toUpperCase","sortData","filteredList","filterBy","filter","includes","filterData","App","setEmployees","useEffect","axios","get","then","response","data","results","catch","error","empList","mappedEmpList","uuidv4","name","first","last","thumbnail","large","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31117af9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n// Card for Search Bar and Buttons to Clear and Filter\nexport default function Filter({ onClearClick, onFilterClick }) {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  return (\n    <div className=\"col-lg-12 d-flex justify-content-center\">\n      <div className=\"input-group mb-3\">\n        <input\n          onChange={(event) => setSearchValue(event.target.value)}\n          value={searchValue}\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Filter by name, email, or phone number\"\n          ariaLabel=\"Filter by name, email, or phone number\"\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={() => {\n              setSearchValue(\"\");\n              onClearClick();\n            }}\n            className=\"btn btn-outline-danger\"\n            type=\"button\"\n          >\n            Clear\n          </button>\n          <button\n            onClick={() => onFilterClick(searchValue)}\n            className=\"btn btn-outline-primary\"\n            type=\"button\"\n          >\n            Filter\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Filter from \"./Filter\";\n\n// Card for Jumbotron\nexport default function Jumboton({onFilterClick, onClearClick}) {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4 mb-3\">Employee Directory</h1> \n        <p className=\"lead mb-5\">\n        View your entire employee directory. Sort or filter by name, email, or phone number.\n        </p>\n      </div>\n      {/* Search Bar with Buttons */}\n      <Filter onFilterClick={onFilterClick} onClearClick={onClearClick} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Employee({ employee }) {\n  return (\n    <div className=\"row border-bottom\">\n      <div className=\"col-lg-2\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline\"\n          data-toggle=\"modal\"\n          data-target=\"#exampleModalCenter\"\n        >\n          <img\n            src={employee.picture}\n            alt={`${employee.firstName} img`}\n            className=\"img-thumbnail rounded-circle\"\n          />\n        </button>\n      </div>\n      <div className=\"col-lg-2 center-text p-0\">{employee.firstName}</div>\n      <div className=\"col-lg-2 center-text p-0\">{employee.lastName}</div>\n      <div className=\"col-lg-4 center-text p-0\">{employee.email}</div>\n      <div className=\"col-lg-2 center-text p-0\">{employee.phone}</div>\n    </div>\n  );\n}","import React from \"react\";\n\nexport default function SortButton({ text, sortField, onClick, className }) {\n  return (\n    <span className={className}>\n      <button type=\"button\" className=\"btn btn-outline p-0\">\n        <span className=\"font-weight-bold\" onClick={() => onClick(sortField)}>\n          {text}\n          {/* <span>\n          <i class=\"fas fa-sort-down\"></i>\n        </span> */}\n        </span>\n      </button>\n    </span>\n  );\n}\n","import React from \"react\";\nimport SortButton from \"./SortButton\";\n\nexport default function TableHeader({ onClick }) {\n  return (\n\n  <div class=\"row border py-2\">\n    <div class=\"col-lg-2 center-text text-secondary pl-5\"><p className=\"m-0\">Sort By:</p> </div>\n    <div class=\"col-lg-2 px-0 center-text\"><SortButton text=\"First Name\" sortField=\"firstName\" onClick={onClick} /></div>\n    <div class=\"col-lg-2 px-0 center-text\"><SortButton text=\"Last Name\" sortField=\"lastName\" onClick={onClick} /></div>\n    <div class=\"col-lg-4 px-0 center-text\"><SortButton text=\"Email\" sortField=\"email\" onClick={onClick} /></div>\n    <div class=\"col-lg-2 px-0 center-text\"><SortButton text=\"Phone Number\" sortField=\"phone\" onClick={onClick} /></div>\n  </div>\n\n  );\n}\n","import React from \"react\";\nimport Employee from \"./Employee\";\nimport TableHeader from \"./TableHeader\";\n\nexport default function Table({sortEmployeesClick, employeeList}) {\n  return (\n    <>\n      <TableHeader onClick={sortEmployeesClick} />\n      <div class=\"container shadow-lg\">\n        {employeeList.map((employee) => (\n          <Employee employee={employee} key={employee.guid} />\n        ))}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function CardEmployee({employee}) {\n    console.log(employee);\n  return (\n    <div className=\"card shadow-lg mb-4 col-md-4 col-sm-12 justify-content-around\" style={{width: \"18rem\"}}>\n      <img className=\"card-img-top\" src={employee.lgPicture} alt={`${employee.firstName} pic`} />\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{`${employee.firstName} ${employee.lastName}`}</h4>\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item\"><span><h5>Email: </h5></span>{employee.email}</li>\n        <li className=\"list-group-item\"><span><h5>Phone Number: </h5></span>{employee.phone}</li>\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CardEmployee from \"./CardEmployee\";\nimport SortButton from \"./SortButton\";\n\nexport default function MobileCards({ employeeList, onClick }) {\n  return (\n    <>\n      <div className=\"d-flex justify-content-around mb-4\">\n        <SortButton\n          className=\"\"\n          text=\"sort by First Name\"\n          sortField=\"firstName\"\n          onClick={onClick}\n        />\n        <SortButton\n          className=\"\"\n          text=\"sort by Last Name\"\n          sortField=\"lastName\"\n          onClick={onClick}\n        />\n        <SortButton\n          className=\"\"\n          text=\"sort by Email\"\n          sortField=\"email\"\n          onClick={onClick}\n        />\n        <SortButton\n          className=\"\"\n          text=\"sort by Phone Number\"\n          sortField=\"email\"\n          onClick={onClick}\n        />\n      </div>\n\n      <div class=\"container d-flex flex-wrap\">\n        {employeeList.map((employee) => (\n          <CardEmployee employee={employee} key={employee.guid} />\n        ))}\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { filterData, sortData } from \"../util/util\";\nimport Jumbotron from \"./Jumboton\";\nimport Table from \"./Table\";\nimport MobileCards from \"./MobileCards\";\n\nexport default function Dashboard({ employees }) {\n  // for responsiveness\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\n  // internal state\n  const [employeeList, setEmployeeList] = useState(employees);\n\n  // Function that handles sorting\n  const sortEmployeesClick = (sortBy) => {\n    const employeesCopy = [...employees];\n    const sortedList = sortData(employeesCopy, sortBy);\n    setEmployeeList(sortedList);\n  };\n\n  // Function that handles the onFilterClick\n  const onFilterClick = (searchValue) => {\n    const employeesCopy = [...employees];\n    const filteredList = filterData(employeesCopy, searchValue);\n    setEmployeeList(filteredList);\n  };\n\n  // Function that handles the onClearClick\n  const onClearClick = () => {\n    setEmployeeList(employees);\n  };\n\n  return (\n    <div>\n      <Jumbotron onFilterClick={onFilterClick} onClearClick={onClearClick} />\n      <main className=\"d-flex justify-content-center\">\n        <div class=\"container\">\n          {isDesktopOrLaptop && (\n            <Table\n              sortEmployeesClick={sortEmployeesClick}\n              employeeList={employeeList}\n            />\n          )}\n          {isTabletOrMobile && (\n            <>\n              <MobileCards employeeList={employeeList} onClick={sortEmployeesClick} />\n            </>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n","// Imports uuidv4. Used to get a random id, that is used to set a key value.\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Function that maps over the data and returns what we need from the data.\nfunction mapData(employeeList) {\n  return employeeList.map((employee) => {\n    return {\n      guid: uuidv4(), // used to get a random uuid, will later be assigned as the 'key'\n      firstName: employee.name.first,\n      lastName: employee.name.last,\n      email: employee.email,\n      phone: employee.phone,\n      picture: employee.picture.thumbnail,\n      lgPicture: employee.picture.large,\n    };\n  });\n}\n\n// Function that sorts any data being passed in.\nfunction sortData(employeeList, sortBy) {\n  return employeeList.sort((a, b) => {\n    let propertyA;\n    let propertyB;\n\n    // handles the logic for if a phone number is returned in a (407) format\n    if (sortBy === \"phone\") {\n      const phoneNumberOne = a[sortBy];\n      const phoneNumberTwo = b[sortBy];\n      if (isNaN(phoneNumberOne[0])) {\n        propertyA = phoneNumberOne.slice(1);\n      }\n      if (isNaN(phoneNumberTwo[0])) {\n        propertyB = phoneNumberTwo.slice(1);\n      }\n    }\n    // sorts numbers and letters\n    propertyA = a[sortBy].toUpperCase();\n    propertyB = b[sortBy].toUpperCase();\n    if (propertyA < propertyB) {\n      return -1;\n    }\n    if (propertyA > propertyB) {\n      return 1;\n    }\n\n    // names must be equal\n    return 0;\n  });\n}\n\n// Function for filter or search feature.\nfunction filterData(employeeList, filterBy) {\n  return employeeList.filter((employee) => {\n    return (\n      employee.firstName.includes(filterBy) ||\n      employee.lastName.includes(filterBy) ||\n      employee.email.includes(filterBy) ||\n      employee.phone.includes(filterBy)\n    );\n  });\n}\n\n// exports the functions mapData, sortData, and filterData\nexport { mapData, sortData, filterData };\n","import React, { useEffect, useState } from \"react\"; // allows us to use the use react useEffect and useState Hooks \nimport Table from \"./components/Dashboard\"; //imports the table \nimport { fetchEmployees } from \"./api\"; //imports the function that gets the data\nimport { mapData } from \"./util/util\"; //imports the function that maps and returns the data\nimport \"./assets/css/styles.css\"\n\n\nfunction App() {\n  // creates a const call employee, this const is an empty array initially. \n  const [employees, setEmployees] = useState([]);\n  \n  // is used to get the data, map the data, and change the employees from an empty array to an array that contains the data\n  useEffect(() => {\n    fetchEmployees().then((empList) => { // gets the data then passes it into a function that ...\n      const mappedEmpList = mapData(empList); //...maps the data and returns what we need as a new const.\n      setEmployees(mappedEmpList); // updates 'employees' with new data. \n    });\n  }, []);\n\n\n  // if there are no employees, do nothing.\n  if(employees.length === 0){\n    return null;\n  }\n\n\n  return (\n      <Table employees={employees} /> // passes employees into the Table\n  );\n}\n\n// Exports App\nexport default App;\n","import axios from \"axios\"; //imports axios\n\n// Function that gets the data from the randomuser api.\nfunction fetchEmployees() {\n  return axios\n    .get(\"https://randomuser.me/api/?results=30\") //Limits to 20 employee returns\n    .then((response) => response.data.results) //Returns the results section of the api which contains the users\n    .catch((error) => {\n      // handle error\n      console.log(error);\n    });\n}\n\n// Exports fetchEmployees\nexport { fetchEmployees };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Renders content to the page\nReactDOM.render( <App />, document.getElementById('root'));\n\n"],"sourceRoot":""}